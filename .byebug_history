exit
p ending_positions[0]
print ending_positions[0]
print ending_positions[0].size
p ending_positions[0].size
put ending_positions[0].size
puts ending_positions[0].size
puts ending_positions[0]
puts ending_positions[0].join("").to_s
ending_positions[0]
ending_positions
puts ending_positions[0].join("")
ending_positions
exit
current_pos[2]
movement_vectors
current_pos[0].to_i + movement_vectors[current_pos[2].to_sym][0]
exit
puts ending_positions
puts ending_positions[0]
puts ending_positions[0].join("")
ending_positions
continue
action
continue
action
continue
directional_map[(current_pos[2].downcase + action.downcase).to_sym]
next
exit
directional_map
current_pos[2].downcase + action.downcase
directional_map[current_pos[2].downcase + action.downcase]
next
action
next
exit
current_pos
current_pos[2] = directional_map[current_pos[2].downcase + action.downcase]
next
exit
current_pos
next
movements
current_pos
next
current_pos
exit
current_pos
exit
current_pos
current_pos[2]
current_pos[0] = current_pos[0].to_i + movement_vectors[current_pos[2].downcase.to_sym][0]current_pos[2]
current_pos[0] = current_pos[0].to_i + movement_vectors[current_pos[2].downcase.to_sym][0]
!acceptable_movements.include? action.downcase
action
!acceptable_movements.include? action
exit
 movement_vectors[:n]
 movement_vectors[n]
 movement_vectors["n"]
 movement_vectors
 movement_vectors[action.downcase]
 movement_vectors[action.downcase][0]
current_pos[0] = current_pos[0].to_i + movement_vectors[action.downcase][0]
exit
!acceptable_movements.include? action.downcase
action
continue
movements
action
